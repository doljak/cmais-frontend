<?php

/**
 * BaseAssetTweet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $asset_id
 * @property integer $asset_tweet_monitor_id
 * @property date $date_published
 * @property string $content
 * @property string $url
 * @property string $avatar
 * @property string $author
 * @property string $author_url
 * @property Asset $Asset
 * @property AssetTweetMonitor $AssetTweetMonitor
 * 
 * @method integer           getAssetId()                Returns the current record's "asset_id" value
 * @method integer           getAssetTweetMonitorId()    Returns the current record's "asset_tweet_monitor_id" value
 * @method date              getDatePublished()          Returns the current record's "date_published" value
 * @method string            getContent()                Returns the current record's "content" value
 * @method string            getUrl()                    Returns the current record's "url" value
 * @method string            getAvatar()                 Returns the current record's "avatar" value
 * @method string            getAuthor()                 Returns the current record's "author" value
 * @method string            getAuthorUrl()              Returns the current record's "author_url" value
 * @method Asset             getAsset()                  Returns the current record's "Asset" value
 * @method AssetTweetMonitor getAssetTweetMonitor()      Returns the current record's "AssetTweetMonitor" value
 * @method AssetTweet        setAssetId()                Sets the current record's "asset_id" value
 * @method AssetTweet        setAssetTweetMonitorId()    Sets the current record's "asset_tweet_monitor_id" value
 * @method AssetTweet        setDatePublished()          Sets the current record's "date_published" value
 * @method AssetTweet        setContent()                Sets the current record's "content" value
 * @method AssetTweet        setUrl()                    Sets the current record's "url" value
 * @method AssetTweet        setAvatar()                 Sets the current record's "avatar" value
 * @method AssetTweet        setAuthor()                 Sets the current record's "author" value
 * @method AssetTweet        setAuthorUrl()              Sets the current record's "author_url" value
 * @method AssetTweet        setAsset()                  Sets the current record's "Asset" value
 * @method AssetTweet        setAssetTweetMonitor()      Sets the current record's "AssetTweetMonitor" value
 * 
 * @package    astolfo
 * @subpackage model
 * @author     Emerson Estrella
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAssetTweet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asset_tweet');
        $this->hasColumn('asset_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('asset_tweet_monitor_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('date_published', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('content', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('avatar', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('author', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('author_url', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Asset', array(
             'local' => 'asset_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('AssetTweetMonitor', array(
             'local' => 'asset_tweet_monitor_id',
             'foreign' => 'id'));
    }
}