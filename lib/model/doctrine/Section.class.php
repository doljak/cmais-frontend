<?php

/**
 * Section
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    astolfo
 * @subpackage model
 * @author     Emerson Estrella
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Section extends BaseSection
{
	
  public function __toString2()
  {
    return (string) $this->getTitle();
    /*
    if($this->Site->getTitle())
      return (string) $this->Site->getTitle()." > ".$this->getTitle();
    else
      return (string) $this->getTitle();
    */
  }

  public function __toString()
  {
    if($this->Site->getTitle())
      return (string) $this->Site->getTitle()." > ".$this->getTitle();
    else
      return (string) $this->getTitle();
  }

  public function postDelete($values)
  {
    $log = new Log();
    $log->setAction('Delete');
    if(sfContext::hasInstance())
      $log->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
    $log->setSiteId($this->getSiteId());
    $log->setAsset($this->getId());
    $log->setAssetTitle($this->getTitle());  
    $log->setClass('Section');  
    $log->save();
  }

  public function postUpdate($values)
  {
    $log = new Log();
    $log->setAction('Update');
    if(sfContext::hasInstance())
      $log->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
    $log->setSiteId($this->getSiteId());
    $log->setAsset($this->getId());
    $log->setAssetTitle($this->getTitle());  
    $log->setClass('Section');  
    $log->save();
  }

  public function postInsert($values)
  {
    $log = new Log();
    $log->setAction('Insert');
    if(sfContext::hasInstance())
      $log->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
    $log->setSiteId($this->getSiteId());
    $log->setAsset($this->getId());
    $log->setAssetTitle($this->getTitle());  
    $log->setClass('Section');  
    $log->save();
  }

  public function retriveUrl()
  {
    if($this->getUrl() != "")
      return (string) $this->getUrl();
    else{
      if($this->Parent->getSlug() != ""){
        if(!in_array($this->getSlug(), Array("home", "homepage", "index")))
          return $this->Site->retriveUrl()."/".$this->Parent->getSlug()."/".$this->getSlug();
        else
          return $this->Site->retriveUrl()."/".$this->Parent->getSlug();
      }
      else{
        if(!in_array($this->getSlug(), Array("home", "homepage", "index")))
          return $this->Site->retriveUrl()."/".$this->getSlug();
        else
          return $this->Site->retriveUrl();
      }
    }
  }


  public function subsections(){
    $r = NULL;
    if(count($this->Children) > 0){
      $r = Doctrine_Query::create()
        ->select('s.*')
        ->from('Section s')
        ->where('s.parent_section_id = ?', (int)$this->getId())
        ->andWhere('s.is_visible = ?', 1)
        ->andWhere('s.is_active = ?', 1)
        ->orderBy('s.display_order')
        ->execute();
    }
    return $r;
  }


  public function retriveBlockBySlug($slug){
    if($slug != "" && $this->getId() > 0){
      return Doctrine::getTable('Block')->findOneBySectionIdAndSlug((int)$this->getId(), $slug);
    }
    return null;
  }

}
